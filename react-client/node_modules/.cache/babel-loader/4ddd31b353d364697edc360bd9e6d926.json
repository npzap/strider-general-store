{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npzap\\\\dev\\\\strider-general-store\\\\react-client\\\\src\\\\components\\\\PurchasePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Card, Form, Button, Table } from \"react-bootstrap\";\nimport PurchaseModal from \"./PurchaseModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PurchasePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newCustomer: '',\n      existingCustomer: '',\n      selectedItems: {},\n      errors: {\n        customer: false,\n        items: false,\n        quantity: {}\n      },\n      showPurchaseModal: false,\n      orderDetails: {}\n    };\n    this.handleSelectCustomer = this.handleSelectCustomer.bind(this);\n    this.handleSelectItem = this.handleSelectItem.bind(this);\n    this.handleChangeNewCustomer = this.handleChangeNewCustomer.bind(this);\n    this.handleChangeQuantity = this.handleChangeQuantity.bind(this);\n    this.clearForm = this.clearForm.bind(this);\n    this.openPurchaseModal = this.openPurchaseModal.bind(this);\n    this.closePurchaseModal = this.closePurchaseModal.bind(this);\n    this.buildOrder = this.buildOrder.bind(this);\n    this.handlePurchase = this.handlePurchase.bind(this);\n  }\n\n  handleChangeNewCustomer(event) {\n    this.setState({\n      newCustomer: event.target.value\n    });\n  }\n\n  handleSelectCustomer(event) {\n    this.setState({\n      existingCustomer: event.target.value\n    });\n  }\n\n  handleSelectItem(event) {\n    let ItemId = event.target.id;\n    let selected = this.state.selectedItems;\n\n    if (selected.hasOwnProperty(event.target.id)) {\n      delete selected[ItemId];\n      this.setState({\n        selectedItems: selected\n      });\n    } else {\n      selected[ItemId] = 0;\n      this.setState({\n        selectedItems: selected\n      });\n    }\n  }\n\n  handleChangeQuantity(event) {\n    let value = Number(event.target.value);\n    let ItemId = event.target.id;\n    let selectedItems = this.state.selectedItems;\n\n    if (Number.isInteger(value) && Number(value) >= 0) {\n      selectedItems[ItemId] = value;\n      this.setState({\n        selectedItems\n      });\n    }\n  }\n\n  clearForm() {\n    this.setState({\n      newCustomer: '',\n      existingCustomer: null,\n      selectedItems: {},\n      errors: {\n        customer: false,\n        items: false,\n        quantity: {}\n      }\n    });\n  }\n\n  buildOrder() {\n    let order = {\n      Items: [],\n      Total: 0,\n      Date: new Date(),\n      customerId: null\n    };\n\n    if (this.state.existingCustomer) {\n      order = { ...order,\n        customerName: this.state.newCustomer\n      };\n    } else {\n      let customer = this.state.existingCustomer;\n      order = { ...order,\n        customerName: customer.CustomerName,\n        customerId: customer.customerId\n      };\n    }\n\n    Object.keys(this.state.selectedItems).forEach(itemId => {\n      let quantity = this.state.selectedItems[itemId];\n      let price = this.props.items[itemId].Price;\n      order.Items.push({\n        ItemId: itemId,\n        Quantity: quantity,\n        Price: price\n      });\n      order.Total = order.Total + price * quantity;\n    });\n    return order;\n  }\n\n  openPurchaseModal() {\n    let errors = {\n      customer: false,\n      items: false,\n      quantity: {}\n    };\n\n    if (this.state.existingCustomer === '' && this.state.newCustomer === '') {\n      errors.customer = true;\n    }\n\n    if (Object.keys(this.state.selectedItems).length === 0) {\n      errors.items = true;\n    } else {\n      Object.keys(this.state.selectedItems).forEach(itemId => {\n        if (this.state.selectedItems[itemId] === 0) {\n          errors.quantity[itemId] = true;\n        }\n      });\n    }\n\n    if (errors.customer || errors.items || Object.keys(errors.quantity).length > 0) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      let newOrder = this.buildOrder();\n      this.setState({\n        errors: errors,\n        showPurchaseModal: true,\n        orderDetails: newOrder\n      });\n    }\n  }\n\n  closePurchaseModal() {\n    this.setState({\n      showPurchaseModal: false,\n      orderDetails: {}\n    });\n  }\n\n  handlePurchase() {}\n\n  render() {\n    const {\n      customers,\n      items\n    } = this.props;\n    let modal = null;\n\n    if (this.state.showPurchaseModal) {\n      modal = /*#__PURE__*/_jsxDEV(PurchaseModal, {\n        showModal: this.state.showPurchaseModal,\n        closeModal: this.closePurchaseModal,\n        handlePurchase: this.handlePurchase,\n        order: this.state.orderDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this);\n    }\n\n    console.log(this.state.selectedItems);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        bg: \"light\",\n        border: \"info\",\n        style: {\n          width: 700,\n          margin: '0 auto',\n          marginTop: 75\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          children: \"Submit New Purchase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"New Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  width: 250\n                },\n                placeholder: \"Customer Name\",\n                value: this.state.newCustomer,\n                onChange: this.handleChangeNewCustomer,\n                disabled: this.state.existingCustomer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Existing Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  width: 250\n                },\n                as: \"select\",\n                value: this.state.existingCustomer,\n                onChange: this.handleSelectCustomer,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this), customers.map(customer => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: customer,\n                    children: [customer.CustomerName, \" - \", customer.CustomerId]\n                  }, customer.CustomerId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 48\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Items Purchased\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              bordered: true,\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Item Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: items.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                        id: item.ItemId,\n                        checked: this.state.selectedItems.hasOwnProperty(item.ItemId),\n                        onChange: this.handleSelectItem\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: item.ItemName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: [\"$\", item.Price.toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                        id: item.ItemId,\n                        value: this.state.selectedItems[item.ItemId],\n                        onChange: this.handleChangeQuantity,\n                        disabled: !this.state.selectedItems.hasOwnProperty(item.ItemId),\n                        style: {\n                          width: 50,\n                          marginLeft: 20,\n                          marginRight: 30\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 48\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: this.clearForm,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginLeft: 10\n              },\n              onClick: this.openPurchaseModal,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), modal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  customers,\n  items,\n  orders\n}, props) {\n  return {\n    customers,\n    items,\n    ...props\n  };\n}\n\nexport default connect(mapStateToProps)(PurchasePage);","map":{"version":3,"sources":["C:/Users/npzap/dev/strider-general-store/react-client/src/components/PurchasePage.js"],"names":["React","Component","connect","Card","Form","Button","Table","PurchaseModal","PurchasePage","constructor","props","state","newCustomer","existingCustomer","selectedItems","errors","customer","items","quantity","showPurchaseModal","orderDetails","handleSelectCustomer","bind","handleSelectItem","handleChangeNewCustomer","handleChangeQuantity","clearForm","openPurchaseModal","closePurchaseModal","buildOrder","handlePurchase","event","setState","target","value","ItemId","id","selected","hasOwnProperty","Number","isInteger","order","Items","Total","Date","customerId","customerName","CustomerName","Object","keys","forEach","itemId","price","Price","push","Quantity","length","newOrder","render","customers","modal","console","log","marginTop","width","margin","textAlign","fontSize","map","CustomerId","item","ItemName","toFixed","marginLeft","marginRight","mapStateToProps","orders"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { Card, Form, Button, Table } from \"react-bootstrap\";\r\nimport PurchaseModal from \"./PurchaseModal\";\r\n\r\n\r\nclass PurchasePage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            newCustomer: '',\r\n            existingCustomer: '',\r\n            selectedItems: {},\r\n            errors: {customer: false, items: false, quantity: {}},\r\n            showPurchaseModal: false,\r\n            orderDetails: {}\r\n        }\r\n\r\n        this.handleSelectCustomer = this.handleSelectCustomer.bind(this);\r\n        this.handleSelectItem = this.handleSelectItem.bind(this);\r\n        this.handleChangeNewCustomer = this.handleChangeNewCustomer.bind(this);\r\n        this.handleChangeQuantity = this.handleChangeQuantity.bind(this);\r\n        this.clearForm = this.clearForm.bind(this);\r\n        this.openPurchaseModal = this.openPurchaseModal.bind(this);\r\n        this.closePurchaseModal = this.closePurchaseModal.bind(this);\r\n        this.buildOrder = this.buildOrder.bind(this);\r\n        this.handlePurchase = this.handlePurchase.bind(this);\r\n    }\r\n\r\n    handleChangeNewCustomer(event){\r\n        this.setState({newCustomer: event.target.value});\r\n    }\r\n\r\n    handleSelectCustomer(event) {\r\n        this.setState({existingCustomer: event.target.value})\r\n    }\r\n\r\n    handleSelectItem(event){\r\n        let ItemId = event.target.id;\r\n        let selected = this.state.selectedItems;\r\n        if(selected.hasOwnProperty(event.target.id)){\r\n            delete selected[ItemId];\r\n            this.setState({selectedItems: selected});\r\n        } else{\r\n            selected[ItemId] = 0;\r\n            this.setState({selectedItems: selected});\r\n        }\r\n    }\r\n\r\n    handleChangeQuantity(event){\r\n        let value = Number(event.target.value);\r\n        let ItemId = event.target.id;\r\n        let selectedItems = this.state.selectedItems;\r\n        if(Number.isInteger(value) && Number(value)>=0){\r\n            selectedItems[ItemId] = value;\r\n            this.setState({selectedItems});\r\n        }\r\n    }\r\n\r\n    clearForm(){\r\n        this.setState({\r\n            newCustomer: '',\r\n            existingCustomer: null,\r\n            selectedItems: {},\r\n            errors: {customer: false, items: false, quantity: {}}\r\n        });\r\n    }\r\n\r\n    buildOrder(){\r\n        let order = {\r\n            Items: [],\r\n            Total: 0,\r\n            Date: new Date(),\r\n            customerId: null\r\n        };\r\n\r\n        if(this.state.existingCustomer){\r\n            order = {...order, customerName: this.state.newCustomer}\r\n        } else {\r\n            let customer = this.state.existingCustomer;\r\n            order = {...order, customerName: customer.CustomerName, customerId: customer.customerId};\r\n        }\r\n\r\n        Object.keys(this.state.selectedItems).forEach((itemId) => {\r\n            let quantity = this.state.selectedItems[itemId];\r\n            let price = this.props.items[itemId].Price;\r\n\r\n            order.Items.push({\r\n                ItemId: itemId,\r\n                Quantity: quantity,\r\n                Price: price\r\n            });\r\n\r\n            order.Total = order.Total + (price)*quantity;\r\n        });\r\n\r\n        return order;\r\n    }\r\n\r\n\r\n    openPurchaseModal(){\r\n        let errors = {customer: false, items: false, quantity: {}};\r\n        if (this.state.existingCustomer==='' && this.state.newCustomer===''){\r\n            errors.customer = true;\r\n        }\r\n        if (Object.keys(this.state.selectedItems).length===0){\r\n            errors.items = true;\r\n        } else {\r\n            Object.keys(this.state.selectedItems).forEach((itemId) => {\r\n                if(this.state.selectedItems[itemId]===0){\r\n                    errors.quantity[itemId] = true;\r\n                }\r\n            });\r\n        }\r\n\r\n        if(errors.customer || errors.items || Object.keys(errors.quantity).length>0){\r\n            this.setState({errors: errors});\r\n        } else{\r\n            let newOrder = this.buildOrder();\r\n            this.setState({errors: errors, showPurchaseModal: true, orderDetails: newOrder});\r\n        }\r\n    }\r\n\r\n    closePurchaseModal(){\r\n        this.setState({showPurchaseModal: false, orderDetails: {}});\r\n    }\r\n\r\n    handlePurchase(){\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { customers, items } = this.props;\r\n\r\n        let modal = null;\r\n        if(this.state.showPurchaseModal){\r\n            modal = <PurchaseModal showModal={this.state.showPurchaseModal} closeModal={this.closePurchaseModal} handlePurchase={this.handlePurchase} order={this.state.orderDetails}/>\r\n        }\r\n\r\n        console.log(this.state.selectedItems);\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <Card bg='light' border='info' style={{width: 700, margin: '0 auto', marginTop: 75}}>\r\n                    <Card.Header style={{textAlign: 'center', fontSize: 30}}>Submit New Purchase</Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label>New Customer</Form.Label>\r\n                                <Form.Control style={{width: 250}} placeholder=\"Customer Name\" value={this.state.newCustomer} onChange={this.handleChangeNewCustomer} disabled={this.state.existingCustomer}/>\r\n                                <br/>\r\n                                <Form.Label>Existing Customer</Form.Label>\r\n                                <Form.Control style={{width: 250}} as='select' value={this.state.existingCustomer} onChange={this.handleSelectCustomer}>\r\n                                    <option value=''>Select...</option>\r\n                                    {customers.map((customer) => {\r\n                                        return <option key={customer.CustomerId} value={customer}>{customer.CustomerName} - {customer.CustomerId}</option>\r\n                                    })}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <br/>\r\n                            <Form.Label>Items Purchased</Form.Label>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>Item Name</th>\r\n                                        <th>Price</th>\r\n                                        <th>Quantity</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {items.map((item) => {\r\n                                        return <tr>\r\n                                            <th><Form.Check id={item.ItemId} checked={this.state.selectedItems.hasOwnProperty(item.ItemId)} onChange={this.handleSelectItem}/></th>\r\n                                            <th>{item.ItemName}</th>\r\n                                            <th>${item.Price.toFixed(2)}</th>\r\n                                            <th><Form.Control id={item.ItemId} value={this.state.selectedItems[item.ItemId]} onChange={this.handleChangeQuantity} disabled={!this.state.selectedItems.hasOwnProperty(item.ItemId)} style={{width:50, marginLeft: 20, marginRight: 30}}/></th>\r\n                                        </tr>\r\n                                    })}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Form>\r\n                    </Card.Body>\r\n\r\n                    <Card.Footer>\r\n                        <div className=\"float-right\" >\r\n                            <Button variant=\"secondary\" onClick={this.clearForm}>Clear</Button>\r\n                            <Button style={{marginLeft: 10}} onClick={this.openPurchaseModal}>Submit</Button>\r\n                        </div>\r\n                    </Card.Footer>\r\n                </Card>\r\n                {modal}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ customers, items, orders }, props){\r\n    return {\r\n        customers,\r\n        items,\r\n        ...props\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PurchasePage);\r\n"]},"metadata":{},"sourceType":"module"}