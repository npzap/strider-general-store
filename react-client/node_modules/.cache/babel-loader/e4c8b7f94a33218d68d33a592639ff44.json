{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npzap\\\\dev\\\\strider-general-store\\\\react-client\\\\src\\\\components\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport LoadingBar from \"react-redux-loading\";\nimport { handleLogin } from \"../actions/authedUser\";\nimport { handleInitialData } from \"../actions/shared\";\nimport HeaderNavbar from './HeaderNavbar.js';\nimport LoginModal from './LoginModal.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showLogin: null\n    };\n    this.openLoginModal = this.openLoginModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      dispatch,\n      authedUser\n    } = this.props; //handleLogin(\"admin\", \"password\")\n    //dispatch(handleInitialData(\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTM5NTQyMTB9._oi-chUsFlD5JBknqZh8WpiMKraciSIbvnxCDShMtps\"));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      dispatch,\n      authedUser\n    } = this.props;\n\n    if (prevProps.authedUser !== authedUser && authedUser !== null) {\n      dispatch(handleInitialData(authedUser.authToken));\n    }\n  }\n\n  openLoginModal() {\n    this.setState({\n      showLogin: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showLogin: false\n    });\n  }\n\n  render() {\n    let modal = /*#__PURE__*/_jsxDEV(LoginModal, {\n      showModal: this.state.showLogin,\n      closeModal: this.closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(LoadingBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HeaderNavbar, {\n          openLoginModal: this.openLoginModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/purchase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/receipts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), modal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  customers,\n  items,\n  orders\n}) {\n  return {\n    customers,\n    items,\n    orders\n  };\n}\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:/Users/npzap/dev/strider-general-store/react-client/src/components/App.js"],"names":["React","Component","Fragment","connect","BrowserRouter","Router","Route","Redirect","Switch","LoadingBar","handleLogin","handleInitialData","HeaderNavbar","LoginModal","App","constructor","props","state","showLogin","openLoginModal","bind","closeModal","componentDidMount","dispatch","authedUser","componentDidUpdate","prevProps","prevState","authToken","setState","render","modal","mapStateToProps","customers","items","orders"],"mappings":"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","sourcesContent":["\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\n\nimport LoadingBar from \"react-redux-loading\";\n\nimport { handleLogin } from \"../actions/authedUser\";\nimport { handleInitialData } from \"../actions/shared\";\nimport HeaderNavbar from './HeaderNavbar.js';\nimport LoginModal from './LoginModal.js';\n\n\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showLogin: null\n        }\n\n        this.openLoginModal = this.openLoginModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n\n    componentDidMount() {\n        const { dispatch, authedUser } = this.props;\n\n        //handleLogin(\"admin\", \"password\")\n\n        //dispatch(handleInitialData(\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTM5NTQyMTB9._oi-chUsFlD5JBknqZh8WpiMKraciSIbvnxCDShMtps\"));\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { dispatch, authedUser } = this.props;\n\n        if(prevProps.authedUser !== authedUser && authedUser !== null) {\n            dispatch(handleInitialData(authedUser.authToken));\n        }\n    }\n\n    openLoginModal(){\n        this.setState({showLogin: true});\n    }\n\n    closeModal(){\n        this.setState({showLogin: false});\n    }\n\n\n    render() {\n        let modal = <LoginModal showModal={this.state.showLogin} closeModal={this.closeModal}/>\n\n\n        return (\n            <Router>\n                <Fragment>\n                    <LoadingBar/>\n                    <HeaderNavbar openLoginModal={this.openLoginModal}/>\n                    <Switch>\n                        <Route path='/' exact render={() => (\n                            <Redirect to='/home'/>\n                        )}/>\n                        <Route path='/home'/>\n                        <Route path='/purchase'/>\n                        <Route path='/receipts'/>\n                    </Switch>\n                    {modal}\n                </Fragment>\n            </Router>\n        );\n    }\n\n\n\n\n\n}\n\nfunction mapStateToProps({ customers, items, orders }){\n    return {\n        customers,\n        items,\n        orders\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}