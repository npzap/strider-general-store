{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npzap\\\\dev\\\\strider-general-store\\\\react-client\\\\src\\\\components\\\\PurchasePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Card, Form, Button, Table, ButtonGroup, Row } from \"react-bootstrap\";\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport PurchaseModal from \"./PurchaseModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PurchasePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newCustomer: '',\n      existingCustomer: '',\n      selectedItems: {},\n      showPurchaseModal: false\n    };\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleChangeNewCustomer = this.handleChangeNewCustomer.bind(this);\n    this.handleChangeQuantity = this.handleChangeQuantity.bind(this);\n    this.openPurchaseModal = this.openPurchaseModal.bind(this);\n    this.closePurchaseModal = this.closePurchaseModal.bind(this);\n    this.handlePurchase = this.handlePurchase.bind(this);\n  }\n\n  componentDidMount() {\n    let selectedItems = {};\n    this.props.items.map(item => {\n      selectedItems[item.ItemId] = 0;\n    });\n    this.setState({\n      selectedItems: selectedItems\n    });\n  }\n\n  handleChangeNewCustomer(event) {\n    this.setState({\n      newCustomer: event.target.value\n    });\n  }\n\n  handleSelect(event) {\n    this.setState({\n      existingCustomer: event.target.value\n    });\n  }\n\n  handleChangeQuantity(event) {\n    let value = Number(event.target.value);\n    let ItemId = event.target.id;\n    let selectedItems = this.state.selectedItems;\n    console.log(value);\n\n    if (Number.isInteger(value) && Number(value) >= 0) {\n      selectedItems[ItemId] = value;\n      this.setState({\n        selectedItems\n      });\n    }\n  }\n\n  openPurchaseModal() {\n    this.setState({\n      showPurchaseModal: true\n    });\n  }\n\n  closePurchaseModal() {\n    this.setState({\n      showPurchaseModal: false\n    });\n  }\n\n  handlePurchase(order) {}\n\n  render() {\n    const {\n      customers,\n      items\n    } = this.props;\n    let modal = null;\n\n    if (this.state.showPurchaseModal) {\n      let customer = this.state.existingCustomer == '' ? this.state.newCustomer : this.state.existingCustomer;\n      modal = /*#__PURE__*/_jsxDEV(PurchaseModal, {\n        showModal: this.state.showPurchaseModal,\n        handlePurchase: this.handlePurchase,\n        customer: customer,\n        items: this.state.selectedItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 100\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"light\",\n        border: \"info\",\n        style: {\n          width: 700,\n          margin: '0 auto',\n          marginTop: 75\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          children: \"Submit New Purchase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"New Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  width: 250\n                },\n                placeholder: \"Customer Name\",\n                value: this.state.newCustomer,\n                onChange: this.handleChangeNewCustomer,\n                disabled: this.state.existingCustomer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Existing Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  width: 250\n                },\n                as: \"select\",\n                value: this.state.existingCustomer,\n                onChange: this.handleSelect,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this), customers.map(customer => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: customer.CustomerId,\n                    children: [customer.CustomerName, \" - \", customer.CustomerId]\n                  }, customer.CustomerId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 48\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Items Purchased\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              bordered: true,\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Item Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: items.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: /*#__PURE__*/_jsxDEV(Form.Check, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: item.ItemName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: [\"$\", item.Price.toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                        id: item.ItemId,\n                        value: this.state.selectedItems[item.ItemId],\n                        onChange: this.handleChangeQuantity,\n                        style: {\n                          width: 50,\n                          marginLeft: 20,\n                          marginRight: 30\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 48\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.openPurchaseModal,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  customers,\n  items,\n  orders\n}, props) {\n  return {\n    customers,\n    items,\n    ...props\n  };\n}\n\nexport default connect(mapStateToProps)(PurchasePage);","map":{"version":3,"sources":["C:/Users/npzap/dev/strider-general-store/react-client/src/components/PurchasePage.js"],"names":["React","Component","connect","Card","Form","Button","Table","ButtonGroup","Row","faMinus","faPlus","PurchaseModal","PurchasePage","constructor","props","state","newCustomer","existingCustomer","selectedItems","showPurchaseModal","handleSelect","bind","handleChangeNewCustomer","handleChangeQuantity","openPurchaseModal","closePurchaseModal","handlePurchase","componentDidMount","items","map","item","ItemId","setState","event","target","value","Number","id","console","log","isInteger","order","render","customers","modal","customer","marginTop","width","margin","textAlign","fontSize","CustomerId","CustomerName","ItemName","Price","toFixed","marginLeft","marginRight","mapStateToProps","orders"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { Card, Form, Button, Table, ButtonGroup, Row } from \"react-bootstrap\";\r\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport PurchaseModal from \"./PurchaseModal\";\r\n\r\n\r\nclass PurchasePage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            newCustomer: '',\r\n            existingCustomer: '',\r\n            selectedItems: {},\r\n            showPurchaseModal: false\r\n        }\r\n\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.handleChangeNewCustomer = this.handleChangeNewCustomer.bind(this);\r\n        this.handleChangeQuantity = this.handleChangeQuantity.bind(this);\r\n        this.openPurchaseModal = this.openPurchaseModal.bind(this);\r\n        this.closePurchaseModal = this.closePurchaseModal.bind(this);\r\n        this.handlePurchase = this.handlePurchase.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let selectedItems = {};\r\n        this.props.items.map((item) => {\r\n            selectedItems[item.ItemId] = 0\r\n        });\r\n\r\n        this.setState({selectedItems: selectedItems});\r\n    }\r\n\r\n    handleChangeNewCustomer(event){\r\n        this.setState({newCustomer: event.target.value});\r\n    }\r\n\r\n    handleSelect(event) {\r\n        this.setState({existingCustomer: event.target.value})\r\n    }\r\n\r\n    handleChangeQuantity(event){\r\n        let value = Number(event.target.value);\r\n        let ItemId = event.target.id;\r\n        let selectedItems = this.state.selectedItems;\r\n        console.log(value);\r\n        if(Number.isInteger(value) && Number(value)>=0){\r\n            selectedItems[ItemId] = value;\r\n            this.setState({selectedItems});\r\n        }\r\n    }\r\n\r\n    openPurchaseModal(){\r\n        this.setState({showPurchaseModal: true});\r\n    }\r\n\r\n    closePurchaseModal(){\r\n        this.setState({showPurchaseModal: false});\r\n    }\r\n\r\n    handlePurchase(order){\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { customers, items } = this.props;\r\n\r\n        let modal = null;\r\n        if(this.state.showPurchaseModal){\r\n            let customer = this.state.existingCustomer=='' ? this.state.newCustomer : this.state.existingCustomer;\r\n            modal = <PurchaseModal showModal={this.state.showPurchaseModal} handlePurchase={this.handlePurchase} customer={customer} items={this.state.selectedItems}/>\r\n        }\r\n\r\n        return(\r\n            <div style={{marginTop: 100}}>\r\n                <Card bg='light' border='info' style={{width: 700, margin: '0 auto', marginTop: 75}}>\r\n                    <Card.Header style={{textAlign: 'center', fontSize: 30}}>Submit New Purchase</Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label>New Customer</Form.Label>\r\n                                <Form.Control style={{width: 250}} placeholder=\"Customer Name\" value={this.state.newCustomer} onChange={this.handleChangeNewCustomer} disabled={this.state.existingCustomer}/>\r\n                                <br/>\r\n                                <Form.Label>Existing Customer</Form.Label>\r\n                                <Form.Control style={{width: 250}} as='select' value={this.state.existingCustomer} onChange={this.handleSelect}>\r\n                                    <option value=''>Select...</option>\r\n                                    {customers.map((customer) => {\r\n                                        return <option key={customer.CustomerId} value={customer.CustomerId}>{customer.CustomerName} - {customer.CustomerId}</option>\r\n                                    })}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <br/>\r\n                            <Form.Label>Items Purchased</Form.Label>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>Item Name</th>\r\n                                        <th>Price</th>\r\n                                        <th>Quantity</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {items.map((item) => {\r\n                                        return <tr>\r\n                                            <th><Form.Check/></th>\r\n                                            <th>{item.ItemName}</th>\r\n                                            <th>${item.Price.toFixed(2)}</th>\r\n                                            <th><Form.Control id={item.ItemId} value={this.state.selectedItems[item.ItemId]} onChange={this.handleChangeQuantity} style={{width:50, marginLeft: 20, marginRight: 30}}/></th>\r\n                                        </tr>\r\n                                    })}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Form>\r\n                    </Card.Body>\r\n\r\n                    <Card.Footer style={{textAlign: 'center'}}>\r\n                        <Button onClick={this.openPurchaseModal}>Submit</Button>\r\n                    </Card.Footer>\r\n                </Card>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ customers, items, orders }, props){\r\n    return {\r\n        customers,\r\n        items,\r\n        ...props\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PurchasePage);\r\n"]},"metadata":{},"sourceType":"module"}