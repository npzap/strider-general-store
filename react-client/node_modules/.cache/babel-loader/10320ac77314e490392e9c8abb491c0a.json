{"ast":null,"code":"const PORT = process.env.PORT || 3080;\nexport function addCustomer(CustomerName) {\n  const data = {\n    CustomerName: CustomerName\n  };\n  return fetch('http://localhost:' + PORT + '/customers', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(response => response.json()).then(data => {\n    console.log('Success: ' + data);\n  }).catch(error => {\n    console.error('Error: ', error);\n  });\n}\nexport function getCustomers() {\n  return new Promise((res, rej) => {\n    fetch('http://localhost:' + PORT + '/customers', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log('Success: ' + data);\n    }).catch(error => {\n      console.error('Error: ', error);\n    });\n  });\n}\nexport function addItem() {\n  const data = {};\n  return new Promise((res, rej) => {\n    fetch('http://localhost:' + PORT + '/items', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log('Success: ' + data);\n    }).catch(error => {\n      console.error('Error: ', error);\n    });\n  });\n}\nexport function getItems() {\n  return new Promise((res, rej) => {\n    fetch('http://localhost:' + PORT + '/items', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log('Success: ' + data);\n    }).catch(error => {\n      console.error('Error: ', error);\n    });\n  });\n}\nexport function updateItemById(id) {\n  return new Promise((res, rej) => {\n    fetch('http://localhost:' + PORT + '/items' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log('Success: ' + data);\n    }).catch(error => {\n      console.error('Error: ', error);\n    });\n  });\n}\nexport function getOrders() {\n  return new Promise((res, rej) => {\n    fetch('http://localhost:' + PORT + '/orders', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log('Success: ' + data);\n    }).catch(error => {\n      console.error('Error: ', error);\n    });\n  });\n}\nexport function addOrder(id, date, total) {\n  const data = {\n    CustomerId: id,\n    Date: date,\n    Total: total\n  };\n  return new Promise((res, rej) => {\n    fetch('http://localhost:' + PORT + '/orders', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log('Success: ' + data);\n    }).catch(error => {\n      console.error('Error: ', error);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/npzap/dev/strider-general-store/react-client/src/utils/api.js"],"names":["PORT","process","env","addCustomer","CustomerName","data","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","catch","error","getCustomers","Promise","res","rej","addItem","getItems","updateItemById","id","getOrders","addOrder","date","total","CustomerId","Date","Total"],"mappings":"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","sourcesContent":["const PORT = process.env.PORT || 3080;\r\n\r\n\r\nexport function addCustomer(CustomerName){\r\n    const data = {CustomerName: CustomerName};\r\n\r\n    return fetch('http://localhost:' + PORT + '/customers', {\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Success: ' + data);\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error: ', error);\r\n    });\r\n}\r\n\r\nexport function getCustomers(){\r\n\r\n    return new Promise((res, rej) => {\r\n        fetch('http://localhost:' + PORT + '/customers', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success: ' + data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error: ', error);\r\n            });\r\n    });\r\n}\r\n\r\nexport function addItem(){\r\n    const data = {\r\n        \r\n    }\r\n\r\n    return new Promise((res, rej) => {\r\n        fetch('http://localhost:' + PORT + '/items', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success: ' + data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error: ', error);\r\n            });\r\n    });\r\n}\r\n\r\nexport function getItems(){\r\n    return new Promise((res, rej) => {\r\n        fetch('http://localhost:' + PORT + '/items', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success: ' + data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error: ', error);\r\n            });\r\n    });\r\n}\r\n\r\nexport function updateItemById(id){\r\n    return new Promise((res, rej) => {\r\n        fetch('http://localhost:' + PORT + '/items' + id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success: ' + data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error: ', error);\r\n            });\r\n    });\r\n}\r\n\r\nexport function getOrders(){\r\n    return new Promise((res, rej) => {\r\n        fetch('http://localhost:' + PORT + '/orders', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success: ' + data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error: ', error);\r\n            });\r\n    });\r\n}\r\n\r\nexport function addOrder(id, date, total){\r\n    const data = {\r\n        CustomerId: id,\r\n        Date: date,\r\n        Total: total\r\n    };\r\n\r\n    return new Promise((res, rej) => {\r\n        fetch('http://localhost:' + PORT + '/orders', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success: ' + data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error: ', error);\r\n            });\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}